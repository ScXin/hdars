// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EPICSMeanEvent.proto

package hadarshbaseplugin.pb;

public final class EPICSMeanEvent {
  private EPICSMeanEvent() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MeanScalarDoubleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint32 secondsintoyear = 1;
    /**
     * <code>required uint32 secondsintoyear = 1;</code>
     */
    boolean hasSecondsintoyear();
    /**
     * <code>required uint32 secondsintoyear = 1;</code>
     */
    int getSecondsintoyear();

    // required uint32 nano = 2;
    /**
     * <code>required uint32 nano = 2;</code>
     */
    boolean hasNano();
    /**
     * <code>required uint32 nano = 2;</code>
     */
    int getNano();

    // required double val = 3;
    /**
     * <code>required double val = 3;</code>
     */
    boolean hasVal();
    /**
     * <code>required double val = 3;</code>
     */
    double getVal();

    // required uint64 count = 4;
    /**
     * <code>required uint64 count = 4;</code>
     */
    boolean hasCount();
    /**
     * <code>required uint64 count = 4;</code>
     */
    long getCount();
  }
  /**
   * Protobuf type {@code HADARS.MeanScalarDouble}
   */
  public static final class MeanScalarDouble extends
      com.google.protobuf.GeneratedMessage
      implements MeanScalarDoubleOrBuilder {
    // Use MeanScalarDouble.newBuilder() to construct.
    private MeanScalarDouble(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MeanScalarDouble(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MeanScalarDouble defaultInstance;
    public static MeanScalarDouble getDefaultInstance() {
      return defaultInstance;
    }

    public MeanScalarDouble getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MeanScalarDouble(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              secondsintoyear_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nano_ = input.readUInt32();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              val_ = input.readDouble();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              count_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hadarshbaseplugin.pb.EPICSMeanEvent.internal_static_HADARS_MeanScalarDouble_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hadarshbaseplugin.pb.EPICSMeanEvent.internal_static_HADARS_MeanScalarDouble_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.class, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.Builder.class);
    }

    public static com.google.protobuf.Parser<MeanScalarDouble> PARSER =
        new com.google.protobuf.AbstractParser<MeanScalarDouble>() {
      public MeanScalarDouble parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MeanScalarDouble(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<MeanScalarDouble> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 secondsintoyear = 1;
    public static final int SECONDSINTOYEAR_FIELD_NUMBER = 1;
    private int secondsintoyear_;
    /**
     * <code>required uint32 secondsintoyear = 1;</code>
     */
    public boolean hasSecondsintoyear() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 secondsintoyear = 1;</code>
     */
    public int getSecondsintoyear() {
      return secondsintoyear_;
    }

    // required uint32 nano = 2;
    public static final int NANO_FIELD_NUMBER = 2;
    private int nano_;
    /**
     * <code>required uint32 nano = 2;</code>
     */
    public boolean hasNano() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 nano = 2;</code>
     */
    public int getNano() {
      return nano_;
    }

    // required double val = 3;
    public static final int VAL_FIELD_NUMBER = 3;
    private double val_;
    /**
     * <code>required double val = 3;</code>
     */
    public boolean hasVal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double val = 3;</code>
     */
    public double getVal() {
      return val_;
    }

    // required uint64 count = 4;
    public static final int COUNT_FIELD_NUMBER = 4;
    private long count_;
    /**
     * <code>required uint64 count = 4;</code>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint64 count = 4;</code>
     */
    public long getCount() {
      return count_;
    }

    private void initFields() {
      secondsintoyear_ = 0;
      nano_ = 0;
      val_ = 0D;
      count_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSecondsintoyear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNano()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, count_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, secondsintoyear_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, nano_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, val_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HADARS.MeanScalarDouble}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hadarshbaseplugin.pb.EPICSMeanEvent.internal_static_HADARS_MeanScalarDouble_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hadarshbaseplugin.pb.EPICSMeanEvent.internal_static_HADARS_MeanScalarDouble_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.class, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.Builder.class);
      }

      // Construct using hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        secondsintoyear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nano_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        count_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hadarshbaseplugin.pb.EPICSMeanEvent.internal_static_HADARS_MeanScalarDouble_descriptor;
      }

      public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble getDefaultInstanceForType() {
        return hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.getDefaultInstance();
      }

      public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble build() {
        hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble buildPartial() {
        hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble result = new hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.secondsintoyear_ = secondsintoyear_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nano_ = nano_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.val_ = val_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble) {
          return mergeFrom((hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble other) {
        if (other == hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.getDefaultInstance()) return this;
        if (other.hasSecondsintoyear()) {
          setSecondsintoyear(other.getSecondsintoyear());
        }
        if (other.hasNano()) {
          setNano(other.getNano());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSecondsintoyear()) {
          
          return false;
        }
        if (!hasNano()) {
          
          return false;
        }
        if (!hasVal()) {
          
          return false;
        }
        if (!hasCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 secondsintoyear = 1;
      private int secondsintoyear_ ;
      /**
       * <code>required uint32 secondsintoyear = 1;</code>
       */
      public boolean hasSecondsintoyear() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 secondsintoyear = 1;</code>
       */
      public int getSecondsintoyear() {
        return secondsintoyear_;
      }
      /**
       * <code>required uint32 secondsintoyear = 1;</code>
       */
      public Builder setSecondsintoyear(int value) {
        bitField0_ |= 0x00000001;
        secondsintoyear_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 secondsintoyear = 1;</code>
       */
      public Builder clearSecondsintoyear() {
        bitField0_ = (bitField0_ & ~0x00000001);
        secondsintoyear_ = 0;
        onChanged();
        return this;
      }

      // required uint32 nano = 2;
      private int nano_ ;
      /**
       * <code>required uint32 nano = 2;</code>
       */
      public boolean hasNano() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 nano = 2;</code>
       */
      public int getNano() {
        return nano_;
      }
      /**
       * <code>required uint32 nano = 2;</code>
       */
      public Builder setNano(int value) {
        bitField0_ |= 0x00000002;
        nano_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 nano = 2;</code>
       */
      public Builder clearNano() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nano_ = 0;
        onChanged();
        return this;
      }

      // required double val = 3;
      private double val_ ;
      /**
       * <code>required double val = 3;</code>
       */
      public boolean hasVal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double val = 3;</code>
       */
      public double getVal() {
        return val_;
      }
      /**
       * <code>required double val = 3;</code>
       */
      public Builder setVal(double value) {
        bitField0_ |= 0x00000004;
        val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double val = 3;</code>
       */
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        val_ = 0D;
        onChanged();
        return this;
      }

      // required uint64 count = 4;
      private long count_ ;
      /**
       * <code>required uint64 count = 4;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint64 count = 4;</code>
       */
      public long getCount() {
        return count_;
      }
      /**
       * <code>required uint64 count = 4;</code>
       */
      public Builder setCount(long value) {
        bitField0_ |= 0x00000008;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 count = 4;</code>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        count_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:HADARS.MeanScalarDouble)
    }

    static {
      defaultInstance = new MeanScalarDouble(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HADARS.MeanScalarDouble)
  }

  public interface MeanScalarDoubleListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .HADARS.MeanScalarDouble values = 1;
    /**
     * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
     */
    java.util.List<hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble> 
        getValuesList();
    /**
     * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
     */
    hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble getValues(int index);
    /**
     * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
     */
    int getValuesCount();
    /**
     * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
     */
    java.util.List<? extends hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleOrBuilder> 
        getValuesOrBuilderList();
    /**
     * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
     */
    hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleOrBuilder getValuesOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code HADARS.MeanScalarDoubleList}
   */
  public static final class MeanScalarDoubleList extends
      com.google.protobuf.GeneratedMessage
      implements MeanScalarDoubleListOrBuilder {
    // Use MeanScalarDoubleList.newBuilder() to construct.
    private MeanScalarDoubleList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MeanScalarDoubleList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MeanScalarDoubleList defaultInstance;
    public static MeanScalarDoubleList getDefaultInstance() {
      return defaultInstance;
    }

    public MeanScalarDoubleList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MeanScalarDoubleList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                values_ = new java.util.ArrayList<hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble>();
                mutable_bitField0_ |= 0x00000001;
              }
              values_.add(input.readMessage(hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = java.util.Collections.unmodifiableList(values_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return hadarshbaseplugin.pb.EPICSMeanEvent.internal_static_HADARS_MeanScalarDoubleList_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return hadarshbaseplugin.pb.EPICSMeanEvent.internal_static_HADARS_MeanScalarDoubleList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList.class, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList.Builder.class);
    }

    public static com.google.protobuf.Parser<MeanScalarDoubleList> PARSER =
        new com.google.protobuf.AbstractParser<MeanScalarDoubleList>() {
      public MeanScalarDoubleList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MeanScalarDoubleList(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<MeanScalarDoubleList> getParserForType() {
      return PARSER;
    }

    // repeated .HADARS.MeanScalarDouble values = 1;
    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble> values_;
    /**
     * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
     */
    public java.util.List<hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble> getValuesList() {
      return values_;
    }
    /**
     * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
     */
    public java.util.List<? extends hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    /**
     * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
     */
    public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
     */
    public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }

    private void initFields() {
      values_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getValuesCount(); i++) {
        if (!getValues(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < values_.size(); i++) {
        output.writeMessage(1, values_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < values_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, values_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code HADARS.MeanScalarDoubleList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return hadarshbaseplugin.pb.EPICSMeanEvent.internal_static_HADARS_MeanScalarDoubleList_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return hadarshbaseplugin.pb.EPICSMeanEvent.internal_static_HADARS_MeanScalarDoubleList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList.class, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList.Builder.class);
      }

      // Construct using hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getValuesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return hadarshbaseplugin.pb.EPICSMeanEvent.internal_static_HADARS_MeanScalarDoubleList_descriptor;
      }

      public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList getDefaultInstanceForType() {
        return hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList.getDefaultInstance();
      }

      public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList build() {
        hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList buildPartial() {
        hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList result = new hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList(this);
        int from_bitField0_ = bitField0_;
        if (valuesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            values_ = java.util.Collections.unmodifiableList(values_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList) {
          return mergeFrom((hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList other) {
        if (other == hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList.getDefaultInstance()) return this;
        if (valuesBuilder_ == null) {
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
        } else {
          if (!other.values_.isEmpty()) {
            if (valuesBuilder_.isEmpty()) {
              valuesBuilder_.dispose();
              valuesBuilder_ = null;
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
              valuesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getValuesFieldBuilder() : null;
            } else {
              valuesBuilder_.addAllMessages(other.values_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getValuesCount(); i++) {
          if (!getValues(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .HADARS.MeanScalarDouble values = 1;
      private java.util.List<hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble> values_ =
        java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = new java.util.ArrayList<hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble>(values_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.Builder, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleOrBuilder> valuesBuilder_;

      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public java.util.List<hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble> getValuesList() {
        if (valuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(values_);
        } else {
          return valuesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public int getValuesCount() {
        if (valuesBuilder_ == null) {
          return values_.size();
        } else {
          return valuesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble getValues(int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);
        } else {
          return valuesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public Builder setValues(
          int index, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.set(index, value);
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public Builder setValues(
          int index, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.set(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public Builder addValues(hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public Builder addValues(
          int index, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(index, value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public Builder addValues(
          hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public Builder addValues(
          int index, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public Builder addAllValues(
          Iterable<? extends hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble> values) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          super.addAll(values, values_);
          onChanged();
        } else {
          valuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public Builder removeValues(int index) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.remove(index);
          onChanged();
        } else {
          valuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.Builder getValuesBuilder(
          int index) {
        return getValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleOrBuilder getValuesOrBuilder(
          int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);  } else {
          return valuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public java.util.List<? extends hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleOrBuilder> 
           getValuesOrBuilderList() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(values_);
        }
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.Builder addValuesBuilder() {
        return getValuesFieldBuilder().addBuilder(
            hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.getDefaultInstance());
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.Builder addValuesBuilder(
          int index) {
        return getValuesFieldBuilder().addBuilder(
            index, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.getDefaultInstance());
      }
      /**
       * <code>repeated .HADARS.MeanScalarDouble values = 1;</code>
       */
      public java.util.List<hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.Builder> 
           getValuesBuilderList() {
        return getValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.Builder, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDouble.Builder, hadarshbaseplugin.pb.EPICSMeanEvent.MeanScalarDoubleOrBuilder>(
                  values_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:HADARS.MeanScalarDoubleList)
    }

    static {
      defaultInstance = new MeanScalarDoubleList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:HADARS.MeanScalarDoubleList)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HADARS_MeanScalarDouble_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HADARS_MeanScalarDouble_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_HADARS_MeanScalarDoubleList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_HADARS_MeanScalarDoubleList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024EPICSMeanEvent.proto\022\006HADARS\"U\n\020MeanSc" +
      "alarDouble\022\027\n\017secondsintoyear\030\001 \002(\r\022\014\n\004n" +
      "ano\030\002 \002(\r\022\013\n\003val\030\003 \002(\001\022\r\n\005count\030\004 \002(\004\"@\n" +
      "\024MeanScalarDoubleList\022(\n\006values\030\001 \003(\0132\030." +
      "HADARS.MeanScalarDoubleB2\n h" +
      "adarshbaseplugin.pbB\016EPICSMeanEvent"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_HADARS_MeanScalarDouble_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_HADARS_MeanScalarDouble_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HADARS_MeanScalarDouble_descriptor,
              new String[] { "Secondsintoyear", "Nano", "Val", "Count", });
          internal_static_HADARS_MeanScalarDoubleList_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_HADARS_MeanScalarDoubleList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_HADARS_MeanScalarDoubleList_descriptor,
              new String[] { "Values", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
